'use strict';
window.jscolor || (window.jscolor = function() {
    var d = {
        register: function register() {
            d.attachDOMReadyEvent(d.init),
            d.attachEvent(document, 'mousedown', d.onDocumentMouseDown),
            d.attachEvent(document, 'touchstart', d.onDocumentTouchStart),
            d.attachEvent(window, 'resize', d.onWindowResize)
        },
        init: function init() {
            d.jscolor.lookupClass && d.jscolor.installByClassName(d.jscolor.lookupClass)
        },
        tryInstallOnElements: function tryInstallOnElements(j, k) {
            for (var o = new RegExp('(^|\\s)(' + k + ')(\\s*(\\{[^}]*\\})|\\s|$)','i'), q = 0; q < j.length; q += 1)
                if (!(void 0 !== j[q].type && 'color' == j[q].type.toLowerCase() && d.isColorAttrSupported)) {
                    var t;
                    if (!j[q].jscolor && j[q].className && (t = j[q].className.match(o))) {
                        var w = j[q]
                          , z = null
                          , A = d.getDataAttr(w, 'jscolor');
                        null === A ? t[4] && (z = t[4]) : z = A;
                        var B = {};
                        if (z)
                            try {
                                B = new Function('return (' + z + ')')()
                            } catch (C) {
                                d.warn('Error parsing jscolor options: ' + C + ':\n' + z)
                            }
                        w.jscolor = new d.jscolor(w,B)
                    }
                }
        },
        isColorAttrSupported: function() {
            var j = document.createElement('input');
            return j.setAttribute && (j.setAttribute('type', 'color'),
            'color' === j.type.toLowerCase())
        }(),
        isCanvasSupported: function() {
            var j = document.createElement('canvas');
            return !!(j.getContext && j.getContext('2d'))
        }(),
        fetchElement: function fetchElement(j) {
            return 'string' == typeof j ? document.getElementById(j) : j
        },
        isElementType: function isElementType(j, k) {
            return j.nodeName.toLowerCase() === k.toLowerCase()
        },
        getDataAttr: function getDataAttr(j, k) {
            var q = j.getAttribute('data-' + k);
            return null === q ? null : q
        },
        attachEvent: function attachEvent(j, k, o) {
            j.addEventListener ? j.addEventListener(k, o, !1) : j.attachEvent && j.attachEvent('on' + k, o)
        },
        detachEvent: function detachEvent(j, k, o) {
            j.removeEventListener ? j.removeEventListener(k, o, !1) : j.detachEvent && j.detachEvent('on' + k, o)
        },
        _attachedGroupEvents: {},
        attachGroupEvent: function attachGroupEvent(j, k, o, q) {
            d._attachedGroupEvents.hasOwnProperty(j) || (d._attachedGroupEvents[j] = []),
            d._attachedGroupEvents[j].push([k, o, q]),
            d.attachEvent(k, o, q)
        },
        detachGroupEvents: function detachGroupEvents(j) {
            if (d._attachedGroupEvents.hasOwnProperty(j)) {
                for (var o, k = 0; k < d._attachedGroupEvents[j].length; k += 1)
                    o = d._attachedGroupEvents[j][k],
                    d.detachEvent(o[0], o[1], o[2]);
                delete d._attachedGroupEvents[j]
            }
        },
        attachDOMReadyEvent: function attachDOMReadyEvent(j) {
            var k = !1
              , o = function() {
                k || (k = !0,
                j())
            };
            if ('complete' === document.readyState)
                return void setTimeout(o, 1);
            if (document.addEventListener)
                document.addEventListener('DOMContentLoaded', o, !1),
                window.addEventListener('load', o, !1);
            else if (document.attachEvent && (document.attachEvent('onreadystatechange', function() {
                'complete' === document.readyState && (document.detachEvent('onreadystatechange', arguments.callee),
                o())
            }),
            window.attachEvent('onload', o),
            document.documentElement.doScroll && window == window.top)) {
                var q = function() {
                    if (document.body)
                        try {
                            document.documentElement.doScroll('left'),
                            o()
                        } catch (t) {
                            setTimeout(q, 1)
                        }
                };
                q()
            }
        },
        warn: function warn(j) {
            window.console && window.console.warn && window.console.warn(j)
        },
        preventDefault: function preventDefault(j) {
            j.preventDefault && j.preventDefault(),
            j.returnValue = !1
        },
        captureTarget: function captureTarget(j) {
            j.setCapture && (d._capturedTarget = j,
            d._capturedTarget.setCapture())
        },
        releaseTarget: function releaseTarget() {
            d._capturedTarget && (d._capturedTarget.releaseCapture(),
            d._capturedTarget = null)
        },
        fireEvent: function fireEvent(j, k) {
            if (j)
                if (document.createEvent) {
                    var o = document.createEvent('HTMLEvents');
                    o.initEvent(k, !0, !0),
                    j.dispatchEvent(o)
                } else if (document.createEventObject) {
                    var o = document.createEventObject();
                    j.fireEvent('on' + k, o)
                } else
                    j['on' + k] && j['on' + k]()
        },
        classNameToList: function classNameToList(j) {
            return j.replace(/^\s+|\s+$/g, '').split(/\s+/)
        },
        hasClass: function hasClass(j, k) {
            return !!k && -1 != (' ' + j.className.replace(/\s+/g, ' ') + ' ').indexOf(' ' + k + ' ')
        },
        setClass: function setClass(j, k) {
            for (var o = d.classNameToList(k), q = 0; q < o.length; q += 1)
                d.hasClass(j, o[q]) || (j.className += (j.className ? ' ' : '') + o[q])
        },
        unsetClass: function unsetClass(j, k) {
            for (var t, o = d.classNameToList(k), q = 0; q < o.length; q += 1)
                t = new RegExp('^\\s*' + o[q] + '\\s*|\\s*' + o[q] + '\\s*$|\\s+' + o[q] + '(\\s+)','g'),
                j.className = j.className.replace(t, '$1')
        },
        getStyle: function getStyle(j) {
            return window.getComputedStyle ? window.getComputedStyle(j) : j.currentStyle
        },
        setStyle: function() {
            var j = document.createElement('div')
              , k = function(q) {
                for (var t = 0; t < q.length; t += 1)
                    if (q[t]in j.style)
                        return q[t]
            }
              , o = {
                borderRadius: k(['borderRadius', 'MozBorderRadius', 'webkitBorderRadius']),
                boxShadow: k(['boxShadow', 'MozBoxShadow', 'webkitBoxShadow'])
            };
            return function(q, t, w) {
                switch (t.toLowerCase()) {
                case 'opacity':
                    var z = Math.round(100 * parseFloat(w));
                    q.style.opacity = w,
                    q.style.filter = 'alpha(opacity=' + z + ')';
                    break;
                default:
                    q.style[o[t]] = w;
                }
            }
        }(),
        setBorderRadius: function setBorderRadius(j, k) {
            d.setStyle(j, 'borderRadius', k || '0')
        },
        setBoxShadow: function setBoxShadow(j, k) {
            d.setStyle(j, 'boxShadow', k || 'none')
        },
        getElementPos: function getElementPos(j, k) {
            var o = 0
              , q = 0
              , t = j.getBoundingClientRect();
            if (o = t.left,
            q = t.top,
            !k) {
                var w = d.getViewPos();
                o += w[0],
                q += w[1]
            }
            return [o, q]
        },
        getElementSize: function getElementSize(j) {
            return [j.offsetWidth, j.offsetHeight]
        },
        getAbsPointerPos: function getAbsPointerPos(j) {
            j || (j = window.event);
            var k = 0
              , o = 0;
            return 'undefined' != typeof j.changedTouches && j.changedTouches.length ? (k = j.changedTouches[0].clientX,
            o = j.changedTouches[0].clientY) : 'number' == typeof j.clientX && (k = j.clientX,
            o = j.clientY),
            {
                x: k,
                y: o
            }
        },
        getRelPointerPos: function getRelPointerPos(j) {
            j || (j = window.event);
            var k = j.target || j.srcElement
              , o = k.getBoundingClientRect()
              , q = 0
              , t = 0
              , w = 0
              , z = 0;
            return 'undefined' != typeof j.changedTouches && j.changedTouches.length ? (w = j.changedTouches[0].clientX,
            z = j.changedTouches[0].clientY) : 'number' == typeof j.clientX && (w = j.clientX,
            z = j.clientY),
            q = w - o.left,
            t = z - o.top,
            {
                x: q,
                y: t
            }
        },
        getViewPos: function getViewPos() {
            var j = document.documentElement;
            return [(window.pageXOffset || j.scrollLeft) - (j.clientLeft || 0), (window.pageYOffset || j.scrollTop) - (j.clientTop || 0)]
        },
        getViewSize: function getViewSize() {
            var j = document.documentElement;
            return [window.innerWidth || j.clientWidth, window.innerHeight || j.clientHeight]
        },
        redrawPosition: function redrawPosition() {
            if (d.picker && d.picker.owner) {
                var k, o, j = d.picker.owner;
                j.fixed ? (k = d.getElementPos(j.targetElement, !0),
                o = [0, 0]) : (k = d.getElementPos(j.targetElement),
                o = d.getViewPos());
                var z, A, B, q = d.getElementSize(j.targetElement), t = d.getViewSize(), w = d.getPickerOuterDims(j);
                switch (j.position.toLowerCase()) {
                case 'left':
                    z = 1,
                    A = 0,
                    B = -1;
                    break;
                case 'right':
                    z = 1,
                    A = 0,
                    B = 1;
                    break;
                case 'top':
                    z = 0,
                    A = 1,
                    B = -1;
                    break;
                default:
                    z = 0,
                    A = 1,
                    B = 1;
                }
                var C = (q[A] + w[A]) / 2;
                if (!j.smartPosition)
                    var D = [k[z], k[A] + q[A] - C + C * B];
                else
                    var D = [-o[z] + k[z] + w[z] > t[z] ? -o[z] + k[z] + q[z] / 2 > t[z] / 2 && 0 <= k[z] + q[z] - w[z] ? k[z] + q[z] - w[z] : k[z] : k[z], -o[A] + k[A] + q[A] + w[A] - C + C * B > t[A] ? -o[A] + k[A] + q[A] / 2 > t[A] / 2 && 0 <= k[A] + q[A] - C - C * B ? k[A] + q[A] - C - C * B : k[A] + q[A] - C + C * B : 0 <= k[A] + q[A] - C + C * B ? k[A] + q[A] - C + C * B : k[A] + q[A] - C - C * B];
                var E = D[z]
                  , F = D[A]
                  , G = j.fixed ? 'fixed' : 'absolute'
                  , H = (D[0] + w[0] > k[0] || D[0] < k[0] + q[0]) && D[1] + w[1] < k[1] + q[1];
                d._drawPosition(j, E, F, G, H)
            }
        },
        _drawPosition: function _drawPosition(j, k, o, q, t) {
            var w = t ? 0 : j.shadowBlur;
            d.picker.wrap.style.position = q,
            d.picker.wrap.style.left = k + 'px',
            d.picker.wrap.style.top = o + 'px',
            d.setBoxShadow(d.picker.boxS, j.shadow ? new d.BoxShadow(0,w,j.shadowBlur,0,j.shadowColor) : null)
        },
        getPickerDims: function getPickerDims(j) {
            var k = !!d.getSliderComponent(j)
              , o = [2 * j.insetWidth + 2 * j.padding + j.width + (k ? 2 * j.insetWidth + d.getPadToSliderPadding(j) + j.sliderSize : 0), 2 * j.insetWidth + 2 * j.padding + j.height + (j.closable ? 2 * j.insetWidth + j.padding + j.buttonHeight : 0)];
            return o
        },
        getPickerOuterDims: function getPickerOuterDims(j) {
            var k = d.getPickerDims(j);
            return [k[0] + 2 * j.borderWidth, k[1] + 2 * j.borderWidth]
        },
        getPadToSliderPadding: function getPadToSliderPadding(j) {
            return Math.max(j.padding, 1.5 * (2 * j.pointerBorderWidth + j.pointerThickness))
        },
        getPadYComponent: function getPadYComponent(j) {
            switch (j.mode.charAt(1).toLowerCase()) {
            case 'v':
                return 'v';
            }
            return 's'
        },
        getSliderComponent: function getSliderComponent(j) {
            if (2 < j.mode.length)
                switch (j.mode.charAt(2).toLowerCase()) {
                case 's':
                    return 's';
                    break;
                case 'v':
                    return 'v';
                }
            return null
        },
        onDocumentMouseDown: function onDocumentMouseDown(j) {
            j || (j = window.event);
            var k = j.target || j.srcElement;
            k._jscLinkedInstance ? k._jscLinkedInstance.showOnClick && k._jscLinkedInstance.show() : k._jscControlName ? d.onControlPointerStart(j, k, k._jscControlName, 'mouse') : d.picker && d.picker.owner && d.picker.owner.hide()
        },
        onDocumentTouchStart: function onDocumentTouchStart(j) {
            j || (j = window.event);
            var k = j.target || j.srcElement;
            k._jscLinkedInstance ? k._jscLinkedInstance.showOnClick && k._jscLinkedInstance.show() : k._jscControlName ? d.onControlPointerStart(j, k, k._jscControlName, 'touch') : d.picker && d.picker.owner && d.picker.owner.hide()
        },
        onWindowResize: function onWindowResize() {
            d.redrawPosition()
        },
        onParentScroll: function onParentScroll() {
            d.picker && d.picker.owner && d.picker.owner.hide()
        },
        _pointerMoveEvent: {
            mouse: 'mousemove',
            touch: 'touchmove'
        },
        _pointerEndEvent: {
            mouse: 'mouseup',
            touch: 'touchend'
        },
        _pointerOrigin: null,
        _capturedTarget: null,
        onControlPointerStart: function onControlPointerStart(j, k, o, q) {
            var t = k._jscInstance;
            d.preventDefault(j),
            d.captureTarget(k);
            var w = function(D, E) {
                d.attachGroupEvent('drag', D, d._pointerMoveEvent[q], d.onDocumentPointerMove(j, k, o, q, E)),
                d.attachGroupEvent('drag', D, d._pointerEndEvent[q], d.onDocumentPointerEnd(j, k, o, q))
            };
            if (w(document, [0, 0]),
            window.parent && window.frameElement) {
                var z = window.frameElement.getBoundingClientRect()
                  , A = [-z.left, -z.top];
                w(window.parent.window.document, A)
            }
            var B = d.getAbsPointerPos(j)
              , C = d.getRelPointerPos(j);
            switch (d._pointerOrigin = {
                x: B.x - C.x,
                y: B.y - C.y
            },
            o) {
            case 'pad':
                switch (d.getSliderComponent(t)) {
                case 's':
                    0 === t.hsv[1] && t.fromHSV(null, 100, null);
                    ;break;
                case 'v':
                    0 === t.hsv[2] && t.fromHSV(null, null, 100);
                    ;
                }
                d.setPad(t, j, 0, 0);
                break;
            case 'sld':
                d.setSld(t, j, 0);
            }
            d.dispatchFineChange(t)
        },
        onDocumentPointerMove: function onDocumentPointerMove(j, k, o, q, t) {
            return function(w) {
                var z = k._jscInstance;
                'pad' === o ? (w || (w = window.event),
                d.setPad(z, w, t[0], t[1]),
                d.dispatchFineChange(z)) : 'sld' === o ? (w || (w = window.event),
                d.setSld(z, w, t[1]),
                d.dispatchFineChange(z)) : void 0
            }
        },
        onDocumentPointerEnd: function onDocumentPointerEnd(j, k) {
            return function() {
                var w = k._jscInstance;
                d.detachGroupEvents('drag'),
                d.releaseTarget(),
                d.dispatchChange(w)
            }
        },
        dispatchChange: function dispatchChange(j) {
            j.valueElement && d.isElementType(j.valueElement, 'input') && d.fireEvent(j.valueElement, 'change')
        },
        dispatchFineChange: function dispatchFineChange(j) {
            if (j.onFineChange) {
                var k;
                k = 'string' == typeof j.onFineChange ? new Function(j.onFineChange) : j.onFineChange,
                k.call(j)
            }
        },
        setPad: function setPad(j, k, o, q) {
            var t = d.getAbsPointerPos(k)
              , w = o + t.x - d._pointerOrigin.x - j.padding - j.insetWidth
              , z = q + t.y - d._pointerOrigin.y - j.padding - j.insetWidth
              , A = w * (360 / (j.width - 1))
              , B = 100 - z * (100 / (j.height - 1));
            switch (d.getPadYComponent(j)) {
            case 's':
                j.fromHSV(A, B, null, d.leaveSld);
                break;
            case 'v':
                j.fromHSV(A, null, B, d.leaveSld);
            }
        },
        setSld: function setSld(j, k, o) {
            var q = d.getAbsPointerPos(k)
              , t = o + q.y - d._pointerOrigin.y - j.padding - j.insetWidth
              , w = 100 - t * (100 / (j.height - 1));
            switch (d.getSliderComponent(j)) {
            case 's':
                j.fromHSV(null, w, null, d.leavePad);
                break;
            case 'v':
                j.fromHSV(null, null, w, d.leavePad);
            }
        },
        _vmlNS: 'jsc_vml_',
        _vmlCSS: 'jsc_vml_css_',
        _vmlReady: !1,
        initVML: function initVML() {
            if (!d._vmlReady) {
                var j = document;
                if (j.namespaces[d._vmlNS] || j.namespaces.add(d._vmlNS, 'urn:schemas-microsoft-com:vml'),
                !j.styleSheets[d._vmlCSS]) {
                    var k = ['shape', 'shapetype', 'group', 'background', 'path', 'formulas', 'handles', 'fill', 'stroke', 'shadow', 'textbox', 'textpath', 'imagedata', 'line', 'polyline', 'curve', 'rect', 'roundrect', 'oval', 'arc', 'image']
                      , o = j.createStyleSheet();
                    o.owningElement.id = d._vmlCSS;
                    for (var q = 0; q < k.length; q += 1)
                        o.addRule(d._vmlNS + '\\:' + k[q], 'behavior:url(#default#VML);')
                }
                d._vmlReady = !0
            }
        },
        createPalette: function createPalette() {
            var j = {
                elm: null,
                draw: null
            };
            if (d.isCanvasSupported) {
                var k = document.createElement('canvas')
                  , o = k.getContext('2d')
                  , q = function(C, D, E) {
                    k.width = C,
                    k.height = D,
                    o.clearRect(0, 0, k.width, k.height);
                    var F = o.createLinearGradient(0, 0, k.width, 0);
                    F.addColorStop(0, '#F00'),
                    F.addColorStop(1 / 6, '#FF0'),
                    F.addColorStop(2 / 6, '#0F0'),
                    F.addColorStop(3 / 6, '#0FF'),
                    F.addColorStop(4 / 6, '#00F'),
                    F.addColorStop(5 / 6, '#F0F'),
                    F.addColorStop(1, '#F00'),
                    o.fillStyle = F,
                    o.fillRect(0, 0, k.width, k.height);
                    var G = o.createLinearGradient(0, 0, 0, k.height);
                    switch (E.toLowerCase()) {
                    case 's':
                        G.addColorStop(0, 'rgba(255,255,255,0)'),
                        G.addColorStop(1, 'rgba(255,255,255,1)');
                        break;
                    case 'v':
                        G.addColorStop(0, 'rgba(0,0,0,0)'),
                        G.addColorStop(1, 'rgba(0,0,0,1)');
                    }
                    o.fillStyle = G,
                    o.fillRect(0, 0, k.width, k.height)
                };
                j.elm = k,
                j.draw = q
            } else {
                d.initVML();
                var t = document.createElement('div');
                t.style.position = 'relative',
                t.style.overflow = 'hidden';
                var w = document.createElement(d._vmlNS + ':fill');
                w.type = 'gradient',
                w.method = 'linear',
                w.angle = '90',
                w.colors = '16.67% #F0F, 33.33% #00F, 50% #0FF, 66.67% #0F0, 83.33% #FF0';
                var z = document.createElement(d._vmlNS + ':rect');
                z.style.position = 'absolute',
                z.style.left = '-1px',
                z.style.top = '-1px',
                z.stroked = !1,
                z.appendChild(w),
                t.appendChild(z);
                var A = document.createElement(d._vmlNS + ':fill');
                A.type = 'gradient',
                A.method = 'linear',
                A.angle = '180',
                A.opacity = '0';
                var B = document.createElement(d._vmlNS + ':rect');
                B.style.position = 'absolute',
                B.style.left = '-1px',
                B.style.top = '-1px',
                B.stroked = !1,
                B.appendChild(A),
                t.appendChild(B);
                var q = function(C, D, E) {
                    switch (t.style.width = C + 'px',
                    t.style.height = D + 'px',
                    z.style.width = B.style.width = C + 1 + 'px',
                    z.style.height = B.style.height = D + 1 + 'px',
                    w.color = '#F00',
                    w.color2 = '#F00',
                    E.toLowerCase()) {
                    case 's':
                        A.color = A.color2 = '#FFF';
                        break;
                    case 'v':
                        A.color = A.color2 = '#000';
                    }
                };
                j.elm = t,
                j.draw = q
            }
            return j
        },
        createSliderGradient: function createSliderGradient() {
            var j = {
                elm: null,
                draw: null
            };
            if (d.isCanvasSupported) {
                var k = document.createElement('canvas')
                  , o = k.getContext('2d')
                  , q = function(A, B, C, D) {
                    k.width = A,
                    k.height = B,
                    o.clearRect(0, 0, k.width, k.height);
                    var E = o.createLinearGradient(0, 0, 0, k.height);
                    E.addColorStop(0, C),
                    E.addColorStop(1, D),
                    o.fillStyle = E,
                    o.fillRect(0, 0, k.width, k.height)
                };
                j.elm = k,
                j.draw = q
            } else {
                d.initVML();
                var t = document.createElement('div');
                t.style.position = 'relative',
                t.style.overflow = 'hidden';
                var w = document.createElement(d._vmlNS + ':fill');
                w.type = 'gradient',
                w.method = 'linear',
                w.angle = '180';
                var z = document.createElement(d._vmlNS + ':rect');
                z.style.position = 'absolute',
                z.style.left = '-1px',
                z.style.top = '-1px',
                z.stroked = !1,
                z.appendChild(w),
                t.appendChild(z);
                var q = function(A, B, C, D) {
                    t.style.width = A + 'px',
                    t.style.height = B + 'px',
                    z.style.width = A + 1 + 'px',
                    z.style.height = B + 1 + 'px',
                    w.color = C,
                    w.color2 = D
                };
                j.elm = t,
                j.draw = q
            }
            return j
        },
        leaveValue: 1,
        leaveStyle: 2,
        leavePad: 4,
        leaveSld: 8,
        BoxShadow: function() {
            var j = function(k, o, q, t, w, z) {
                this.hShadow = k,
                this.vShadow = o,
                this.blur = q,
                this.spread = t,
                this.color = w,
                this.inset = !!z
            };
            return j.prototype.toString = function() {
                var k = [Math.round(this.hShadow) + 'px', Math.round(this.vShadow) + 'px', Math.round(this.blur) + 'px', Math.round(this.spread) + 'px', this.color];
                return this.inset && k.push('inset'),
                k.join(' ')
            }
            ,
            j
        }(),
        jscolor: function jscolor(j, k) {
            function o(L, M, N) {
                L /= 255,
                M /= 255,
                N /= 255;
                var O = Math.min(Math.min(L, M), N)
                  , P = Math.max(Math.max(L, M), N)
                  , Q = P - O;
                if (0 == Q)
                    return [null, 0, 100 * P];
                var R = L === O ? 3 + (N - M) / Q : M === O ? 5 + (L - N) / Q : 1 + (M - L) / Q;
                return [60 * (6 == R ? 0 : R), 100 * (Q / P), 100 * P]
            }
            function q(L, M, N) {
                var O = 255 * (N / 100);
                if (null === L)
                    return [O, O, O];
                L /= 60,
                M /= 100;
                var P = Math.floor(L)
                  , Q = P % 2 ? L - P : 1 - (L - P)
                  , R = O * (1 - M)
                  , S = O * (1 - M * Q);
                return 6 === P || 0 === P ? [O, S, R] : 1 === P ? [S, O, R] : 2 === P ? [R, O, S] : 3 === P ? [R, S, O] : 4 === P ? [S, R, O] : 5 === P ? [O, R, S] : void 0
            }
            function t() {
                d.unsetClass(G.targetElement, G.activeClass),
                d.picker.wrap.parentNode.removeChild(d.picker.wrap),
                delete d.picker.owner
            }
            function w() {
                G._processParentElementsInDOM(),
                d.picker || (d.picker = {
                    owner: null,
                    wrap: document.createElement('div'),
                    box: document.createElement('div'),
                    boxS: document.createElement('div'),
                    boxB: document.createElement('div'),
                    pad: document.createElement('div'),
                    padB: document.createElement('div'),
                    padM: document.createElement('div'),
                    padPal: d.createPalette(),
                    cross: document.createElement('div'),
                    crossBY: document.createElement('div'),
                    crossBX: document.createElement('div'),
                    crossLY: document.createElement('div'),
                    crossLX: document.createElement('div'),
                    sld: document.createElement('div'),
                    sldB: document.createElement('div'),
                    sldM: document.createElement('div'),
                    sldGrad: d.createSliderGradient(),
                    sldPtrS: document.createElement('div'),
                    sldPtrIB: document.createElement('div'),
                    sldPtrMB: document.createElement('div'),
                    sldPtrOB: document.createElement('div'),
                    btn: document.createElement('div'),
                    btnT: document.createElement('span')
                },
                d.picker.pad.appendChild(d.picker.padPal.elm),
                d.picker.padB.appendChild(d.picker.pad),
                d.picker.cross.appendChild(d.picker.crossBY),
                d.picker.cross.appendChild(d.picker.crossBX),
                d.picker.cross.appendChild(d.picker.crossLY),
                d.picker.cross.appendChild(d.picker.crossLX),
                d.picker.padB.appendChild(d.picker.cross),
                d.picker.box.appendChild(d.picker.padB),
                d.picker.box.appendChild(d.picker.padM),
                d.picker.sld.appendChild(d.picker.sldGrad.elm),
                d.picker.sldB.appendChild(d.picker.sld),
                d.picker.sldB.appendChild(d.picker.sldPtrOB),
                d.picker.sldPtrOB.appendChild(d.picker.sldPtrMB),
                d.picker.sldPtrMB.appendChild(d.picker.sldPtrIB),
                d.picker.sldPtrIB.appendChild(d.picker.sldPtrS),
                d.picker.box.appendChild(d.picker.sldB),
                d.picker.box.appendChild(d.picker.sldM),
                d.picker.btn.appendChild(d.picker.btnT),
                d.picker.box.appendChild(d.picker.btn),
                d.picker.boxB.appendChild(d.picker.box),
                d.picker.wrap.appendChild(d.picker.boxS),
                d.picker.wrap.appendChild(d.picker.boxB));
                var M = d.picker
                  , N = !!d.getSliderComponent(G)
                  , O = d.getPickerDims(G)
                  , P = 2 * G.pointerBorderWidth + G.pointerThickness + 2 * G.crossSize
                  , Q = d.getPadToSliderPadding(G)
                  , R = Math.min(G.borderRadius, Math.round(G.padding * Math.PI));
                M.wrap.style.clear = 'both',
                M.wrap.style.width = O[0] + 2 * G.borderWidth + 'px',
                M.wrap.style.height = O[1] + 2 * G.borderWidth + 'px',
                M.wrap.style.zIndex = G.zIndex,
                M.box.style.width = O[0] + 'px',
                M.box.style.height = O[1] + 'px',
                M.boxS.style.position = 'absolute',
                M.boxS.style.left = '0',
                M.boxS.style.top = '0',
                M.boxS.style.width = '100%',
                M.boxS.style.height = '100%',
                d.setBorderRadius(M.boxS, R + 'px'),
                M.boxB.style.position = 'relative',
                M.boxB.style.border = G.borderWidth + 'px solid',
                M.boxB.style.borderColor = G.borderColor,
                M.boxB.style.background = G.backgroundColor,
                d.setBorderRadius(M.boxB, R + 'px'),
                M.padM.style.background = M.sldM.style.background = '#FFF',
                d.setStyle(M.padM, 'opacity', '0'),
                d.setStyle(M.sldM, 'opacity', '0'),
                M.pad.style.position = 'relative',
                M.pad.style.width = G.width + 'px',
                M.pad.style.height = G.height + 'px',
                M.padPal.draw(G.width, G.height, d.getPadYComponent(G)),
                M.padB.style.position = 'absolute',
                M.padB.style.left = G.padding + 'px',
                M.padB.style.top = G.padding + 'px',
                M.padB.style.border = G.insetWidth + 'px solid',
                M.padB.style.borderColor = G.insetColor,
                M.padM._jscInstance = G,
                M.padM._jscControlName = 'pad',
                M.padM.style.position = 'absolute',
                M.padM.style.left = '0',
                M.padM.style.top = '0',
                M.padM.style.width = G.padding + 2 * G.insetWidth + G.width + Q / 2 + 'px',
                M.padM.style.height = O[1] + 'px',
                M.padM.style.cursor = 'crosshair',
                M.cross.style.position = 'absolute',
                M.cross.style.left = M.cross.style.top = '0',
                M.cross.style.width = M.cross.style.height = P + 'px',
                M.crossBY.style.position = M.crossBX.style.position = 'absolute',
                M.crossBY.style.background = M.crossBX.style.background = G.pointerBorderColor,
                M.crossBY.style.width = M.crossBX.style.height = 2 * G.pointerBorderWidth + G.pointerThickness + 'px',
                M.crossBY.style.height = M.crossBX.style.width = P + 'px',
                M.crossBY.style.left = M.crossBX.style.top = Math.floor(P / 2) - Math.floor(G.pointerThickness / 2) - G.pointerBorderWidth + 'px',
                M.crossBY.style.top = M.crossBX.style.left = '0',
                M.crossLY.style.position = M.crossLX.style.position = 'absolute',
                M.crossLY.style.background = M.crossLX.style.background = G.pointerColor,
                M.crossLY.style.height = M.crossLX.style.width = P - 2 * G.pointerBorderWidth + 'px',
                M.crossLY.style.width = M.crossLX.style.height = G.pointerThickness + 'px',
                M.crossLY.style.left = M.crossLX.style.top = Math.floor(P / 2) - Math.floor(G.pointerThickness / 2) + 'px',
                M.crossLY.style.top = M.crossLX.style.left = G.pointerBorderWidth + 'px',
                M.sld.style.overflow = 'hidden',
                M.sld.style.width = G.sliderSize + 'px',
                M.sld.style.height = G.height + 'px',
                M.sldGrad.draw(G.sliderSize, G.height, '#000', '#000'),
                M.sldB.style.display = N ? 'block' : 'none',
                M.sldB.style.position = 'absolute',
                M.sldB.style.right = G.padding + 'px',
                M.sldB.style.top = G.padding + 'px',
                M.sldB.style.border = G.insetWidth + 'px solid',
                M.sldB.style.borderColor = G.insetColor,
                M.sldM._jscInstance = G,
                M.sldM._jscControlName = 'sld',
                M.sldM.style.display = N ? 'block' : 'none',
                M.sldM.style.position = 'absolute',
                M.sldM.style.right = '0',
                M.sldM.style.top = '0',
                M.sldM.style.width = G.sliderSize + Q / 2 + G.padding + 2 * G.insetWidth + 'px',
                M.sldM.style.height = O[1] + 'px',
                M.sldM.style.cursor = 'default',
                M.sldPtrIB.style.border = M.sldPtrOB.style.border = G.pointerBorderWidth + 'px solid ' + G.pointerBorderColor,
                M.sldPtrOB.style.position = 'absolute',
                M.sldPtrOB.style.left = -(2 * G.pointerBorderWidth + G.pointerThickness) + 'px',
                M.sldPtrOB.style.top = '0',
                M.sldPtrMB.style.border = G.pointerThickness + 'px solid ' + G.pointerColor,
                M.sldPtrS.style.width = G.sliderSize + 'px',
                M.sldPtrS.style.height = I + 'px',
                M.btn.style.display = G.closable ? 'block' : 'none',
                M.btn.style.position = 'absolute',
                M.btn.style.left = G.padding + 'px',
                M.btn.style.bottom = G.padding + 'px',
                M.btn.style.padding = '0 15px',
                M.btn.style.height = G.buttonHeight + 'px',
                M.btn.style.border = G.insetWidth + 'px solid',
                function() {
                    var T = G.insetColor.split(/\s+/)
                      , U = 2 > T.length ? T[0] : T[1] + ' ' + T[0] + ' ' + T[0] + ' ' + T[1];
                    M.btn.style.borderColor = U
                }(),
                M.btn.style.color = G.buttonColor,
                M.btn.style.font = '12px sans-serif',
                M.btn.style.textAlign = 'center';
                try {
                    M.btn.style.cursor = 'pointer'
                } catch (T) {
                    M.btn.style.cursor = 'hand'
                }
                M.btn.onmousedown = function() {
                    G.hide()
                }
                ,
                M.btnT.style.lineHeight = G.buttonHeight + 'px',
                M.btnT.innerHTML = '',
                M.btnT.appendChild(document.createTextNode(G.closeText)),
                z(),
                A(),
                d.picker.owner && d.picker.owner !== G && d.unsetClass(d.picker.owner.targetElement, G.activeClass),
                d.picker.owner = G,
                d.isElementType(H, 'body') ? d.redrawPosition() : d._drawPosition(G, 0, 0, 'relative', !1),
                M.wrap.parentNode != H && H.appendChild(M.wrap),
                d.setClass(G.targetElement, G.activeClass)
            }
            function z() {
                switch (d.getPadYComponent(G)) {
                case 's':
                    var L = 1;
                    break;
                case 'v':
                    var L = 2;
                }
                var M = Math.round(G.hsv[0] / 360 * (G.width - 1))
                  , N = Math.round((1 - G.hsv[L] / 100) * (G.height - 1))
                  , O = 2 * G.pointerBorderWidth + G.pointerThickness + 2 * G.crossSize
                  , P = -Math.floor(O / 2);
                switch (d.picker.cross.style.left = M + P + 'px',
                d.picker.cross.style.top = N + P + 'px',
                d.getSliderComponent(G)) {
                case 's':
                    var Q = q(G.hsv[0], 100, G.hsv[2])
                      , R = q(G.hsv[0], 0, G.hsv[2])
                      , S = 'rgb(' + Math.round(Q[0]) + ',' + Math.round(Q[1]) + ',' + Math.round(Q[2]) + ')'
                      , T = 'rgb(' + Math.round(R[0]) + ',' + Math.round(R[1]) + ',' + Math.round(R[2]) + ')';
                    d.picker.sldGrad.draw(G.sliderSize, G.height, S, T);
                    break;
                case 'v':
                    var U = q(G.hsv[0], G.hsv[1], 100)
                      , S = 'rgb(' + Math.round(U[0]) + ',' + Math.round(U[1]) + ',' + Math.round(U[2]) + ')'
                      , T = '#000';
                    d.picker.sldGrad.draw(G.sliderSize, G.height, S, T);
                }
            }
            function A() {
                var L = d.getSliderComponent(G);
                if (L) {
                    switch (L) {
                    case 's':
                        var M = 1;
                        break;
                    case 'v':
                        var M = 2;
                    }
                    var N = Math.round((1 - G.hsv[M] / 100) * (G.height - 1));
                    d.picker.sldPtrOB.style.top = N - (2 * G.pointerBorderWidth + G.pointerThickness) - Math.floor(I / 2) + 'px'
                }
            }
            function B() {
                return d.picker && d.picker.owner === G
            }
            function C() {
                G.importColor()
            }
            for (var D in this.value = null,
            this.valueElement = j,
            this.styleElement = j,
            this.required = !0,
            this.refine = !0,
            this.hash = !0,
            this.uppercase = !0,
            this.onFineChange = null,
            this.activeClass = 'jscolor-active',
            this.overwriteImportant = !1,
            this.minS = 0,
            this.maxS = 100,
            this.minV = 0,
            this.maxV = 100,
            this.hsv = [0, 0, 100],
            this.rgb = [255, 255, 255],
            this.width = 181,
            this.height = 101,
            this.showOnClick = !0,
            this.mode = 'HSV',
            this.position = 'bottom',
            this.smartPosition = !0,
            this.sliderSize = 16,
            this.crossSize = 8,
            this.closable = !1,
            this.closeText = 'Close',
            this.buttonColor = '#000000',
            this.buttonHeight = 18,
            this.padding = 12,
            this.backgroundColor = '#FFFFFF',
            this.borderWidth = 1,
            this.borderColor = '#BBBBBB',
            this.borderRadius = 8,
            this.insetWidth = 1,
            this.insetColor = '#BBBBBB',
            this.shadow = !0,
            this.shadowBlur = 15,
            this.shadowColor = 'rgba(0,0,0,0.2)',
            this.pointerColor = '#4C4C4C',
            this.pointerBorderColor = '#FFFFFF',
            this.pointerBorderWidth = 1,
            this.pointerThickness = 2,
            this.zIndex = 1e3,
            this.container = null,
            k)
                k.hasOwnProperty(D) && (this[D] = k[D]);
            if (this.hide = function() {
                B() && t()
            }
            ,
            this.show = function() {
                w()
            }
            ,
            this.redraw = function() {
                B() && w()
            }
            ,
            this.importColor = function() {
                this.valueElement ? d.isElementType(this.valueElement, 'input') ? this.refine ? !this.required && /^\s*$/.test(this.valueElement.value) ? (this.valueElement.value = '',
                this.styleElement && (this.styleElement.style.backgroundImage = this.styleElement._jscOrigStyle.backgroundImage,
                this.styleElement.style.backgroundColor = this.styleElement._jscOrigStyle.backgroundColor,
                this.styleElement.style.color = this.styleElement._jscOrigStyle.color),
                this.exportColor(d.leaveValue | d.leaveStyle)) : this.fromString(this.valueElement.value) || this.exportColor() : !this.fromString(this.valueElement.value, d.leaveValue) && (this.styleElement && (this.styleElement.style.backgroundImage = this.styleElement._jscOrigStyle.backgroundImage,
                this.styleElement.style.backgroundColor = this.styleElement._jscOrigStyle.backgroundColor,
                this.styleElement.style.color = this.styleElement._jscOrigStyle.color),
                this.exportColor(d.leaveValue | d.leaveStyle)) : this.exportColor() : this.exportColor()
            }
            ,
            this.exportColor = function(L) {
                if (!(L & d.leaveValue) && this.valueElement) {
                    var M = this.toString();
                    this.uppercase && (M = M.toUpperCase()),
                    this.hash && (M = '#' + M),
                    d.isElementType(this.valueElement, 'input') ? this.valueElement.value = M : this.valueElement.innerHTML = M
                }
                if (!(L & d.leaveStyle) && this.styleElement) {
                    var N = '#' + this.toString()
                      , O = this.isLight() ? '#000' : '#FFF';
                    this.styleElement.style.backgroundImage = 'none',
                    this.styleElement.style.backgroundColor = N,
                    this.styleElement.style.color = O,
                    this.overwriteImportant && this.styleElement.setAttribute('style', 'background: ' + N + ' !important; color: ' + O + ' !important;')
                }
                !(L & d.leavePad) && B() && z(),
                !(L & d.leaveSld) && B() && A()
            }
            ,
            this.fromHSV = function(L, M, N, O) {
                if (null !== L) {
                    if (isNaN(L))
                        return !1;
                    L = Math.max(0, Math.min(360, L))
                }
                if (null !== M) {
                    if (isNaN(M))
                        return !1;
                    M = Math.max(0, Math.min(100, this.maxS, M), this.minS)
                }
                if (null !== N) {
                    if (isNaN(N))
                        return !1;
                    N = Math.max(0, Math.min(100, this.maxV, N), this.minV)
                }
                this.rgb = q(null === L ? this.hsv[0] : this.hsv[0] = L, null === M ? this.hsv[1] : this.hsv[1] = M, null === N ? this.hsv[2] : this.hsv[2] = N),
                this.exportColor(O)
            }
            ,
            this.fromRGB = function(L, M, N, O) {
                if (null !== L) {
                    if (isNaN(L))
                        return !1;
                    L = Math.max(0, Math.min(255, L))
                }
                if (null !== M) {
                    if (isNaN(M))
                        return !1;
                    M = Math.max(0, Math.min(255, M))
                }
                if (null !== N) {
                    if (isNaN(N))
                        return !1;
                    N = Math.max(0, Math.min(255, N))
                }
                var P = o(null === L ? this.rgb[0] : L, null === M ? this.rgb[1] : M, null === N ? this.rgb[2] : N);
                null !== P[0] && (this.hsv[0] = Math.max(0, Math.min(360, P[0]))),
                0 !== P[2] && (this.hsv[1] = null === P[1] ? null : Math.max(0, this.minS, Math.min(100, this.maxS, P[1]))),
                this.hsv[2] = null === P[2] ? null : Math.max(0, this.minV, Math.min(100, this.maxV, P[2]));
                var Q = q(this.hsv[0], this.hsv[1], this.hsv[2]);
                this.rgb[0] = Q[0],
                this.rgb[1] = Q[1],
                this.rgb[2] = Q[2],
                this.exportColor(O)
            }
            ,
            this.fromString = function(L, M) {
                var N;
                if (N = L.match(/^\W*([0-9A-F]{3}([0-9A-F]{3})?)\W*$/i))
                    return 6 === N[1].length ? this.fromRGB(parseInt(N[1].substr(0, 2), 16), parseInt(N[1].substr(2, 2), 16), parseInt(N[1].substr(4, 2), 16), M) : this.fromRGB(parseInt(N[1].charAt(0) + N[1].charAt(0), 16), parseInt(N[1].charAt(1) + N[1].charAt(1), 16), parseInt(N[1].charAt(2) + N[1].charAt(2), 16), M),
                    !0;
                if (N = L.match(/^\W*rgba?\(([^)]*)\)\W*$/i)) {
                    var Q, R, S, O = N[1].split(','), P = /^\s*(\d*)(\.\d+)?\s*$/;
                    if (3 <= O.length && (Q = O[0].match(P)) && (R = O[1].match(P)) && (S = O[2].match(P))) {
                        var T = parseFloat((Q[1] || '0') + (Q[2] || ''))
                          , U = parseFloat((R[1] || '0') + (R[2] || ''))
                          , V = parseFloat((S[1] || '0') + (S[2] || ''));
                        return this.fromRGB(T, U, V, M),
                        !0
                    }
                }
                return !1
            }
            ,
            this.toString = function() {
                return (256 | Math.round(this.rgb[0])).toString(16).substr(1) + (256 | Math.round(this.rgb[1])).toString(16).substr(1) + (256 | Math.round(this.rgb[2])).toString(16).substr(1)
            }
            ,
            this.toHEXString = function() {
                return '#' + this.toString().toUpperCase()
            }
            ,
            this.toRGBString = function() {
                return 'rgb(' + Math.round(this.rgb[0]) + ',' + Math.round(this.rgb[1]) + ',' + Math.round(this.rgb[2]) + ')'
            }
            ,
            this.isLight = function() {
                return 0.213 * this.rgb[0] + 0.715 * this.rgb[1] + 0.072 * this.rgb[2] > 255 / 2
            }
            ,
            this._processParentElementsInDOM = function() {
                if (!this._linkedElementsProcessed) {
                    this._linkedElementsProcessed = !0;
                    var L = this.targetElement;
                    do {
                        var M = d.getStyle(L);
                        M && 'fixed' === M.position.toLowerCase() && (this.fixed = !0),
                        L === this.targetElement || L._jscEventsAttached || (d.attachEvent(L, 'scroll', d.onParentScroll),
                        L._jscEventsAttached = !0)
                    } while ((L = L.parentNode) && !d.isElementType(L, 'body'))
                }
            }
            ,
            'string' == typeof j) {
                var E = j
                  , F = document.getElementById(E);
                F ? this.targetElement = F : d.warn('Could not find target element with ID \'' + E + '\'')
            } else
                j ? this.targetElement = j : d.warn('Invalid target element: \'' + j + '\'');
            if (this.targetElement._jscLinkedInstance)
                return void d.warn('Cannot link jscolor twice to the same element. Skipping.');
            this.targetElement._jscLinkedInstance = this,
            this.valueElement = d.fetchElement(this.valueElement),
            this.styleElement = d.fetchElement(this.styleElement);
            var G = this
              , H = this.container ? d.fetchElement(this.container) : document.getElementsByTagName('body')[0]
              , I = 3;
            if (d.isElementType(this.targetElement, 'button'))
                if (this.targetElement.onclick) {
                    var J = this.targetElement.onclick;
                    this.targetElement.onclick = function(L) {
                        return J.call(this, L),
                        !1
                    }
                } else
                    this.targetElement.onclick = function() {
                        return !1
                    }
                    ;
            if (this.valueElement && d.isElementType(this.valueElement, 'input')) {
                var K = function() {
                    G.fromString(G.valueElement.value, d.leaveValue),
                    d.dispatchFineChange(G)
                };
                d.attachEvent(this.valueElement, 'keyup', K),
                d.attachEvent(this.valueElement, 'input', K),
                d.attachEvent(this.valueElement, 'blur', C),
                this.valueElement.setAttribute('autocomplete', 'off')
            }
            this.styleElement && (this.styleElement._jscOrigStyle = {
                backgroundImage: this.styleElement.style.backgroundImage,
                backgroundColor: this.styleElement.style.backgroundColor,
                color: this.styleElement.style.color
            }),
            this.value ? this.fromString(this.value) || this.exportColor() : this.importColor()
        }
    };
    return d.jscolor.lookupClass = 'jscolor',
    d.jscolor.installByClassName = function(j) {
        var k = document.getElementsByTagName('input')
          , o = document.getElementsByTagName('button');
        d.tryInstallOnElements(k, j),
        d.tryInstallOnElements(o, j)
    }
    ,
    d.register(),
    d.jscolor
}());
